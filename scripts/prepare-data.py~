#! /usr/bin/python3
#import argparse; # only from python 2.7
import sys;
import getopt;
import os;
import string;
from subprocess import *
import random


random.seed(2018)
# anonymize=True;
anonymize=False;


study_programs = ["anvendt matematik", "biokemi og molekylÃ¦r biologi", "biologi", "biomedicin", "datalogi", "farmaci","fysik","kemi", "matematik", "psychology"]


def identifier(read_name):
        if (anonymize):
                buf = Popen("/home/marco/usr/bin/hashit -k /home/marco/usr/bin/mykey28_2014.bin -w "+read_name, stdout=PIPE, shell=True).stdout.read()
                print(buf)
                id_hash=buf.split(" = ")[1].strip("\n")
        else:
                id_hash=read_name.lower();
        return id_hash


def typetransform(type):
        type = type.lowercase()
        if type=="naturvidenskab, biologi og datalogi":
                type="not_pharma"
        elif type=="alle studier, dog ikke farmaci": # for 2018
                type="not_pharma"
        elif type=="kun farmaci":
                type ="pharma"
        #elif string.find(type,"farma",0,5) >= 0:
        #        type ="pharma"
        elif type=="farmaci":
                type="pharma"
        elif type in study_programs:
                type="not_pharma"
        elif type=="alle":
                type="everyone"
        else:
                sys.exit("type not recognized: {}".format(type))
        return type


def typetransform(type):
        if type=="Psychology":
                type="psychology"
        elif type=="psychology":
                type="psychology"
        elif type=="sss":
                type="psychology"
        elif type=="alle":
                type="psychology"
        else:
                sys.exit("type not recognized: {}".format(type))
        return type

def make_priority(dirname, prj_dict):
        print("read students.csv")
        students_file=dirname+"/students.csv";
        f = open(students_file, "r")
        lines=f.readlines();
        f.close();

        priorities_file=dirname+"/tmp_priorities.txt";
        file=open(priorities_file,'w');
        for line in lines:
                if line[0]!= "#":

                        line=line.replace("\n","");
                        line=line.replace("\r","");
                        parts=line.split(";");
                        priorities=parts[3].split(",");
                        n=len(priorities);
                        i=7
                        j=1

                        id=identifier(parts[1])
                        ##print priorities;
                        for p in priorities:
                                file.write(id+";"+str(int(p))+";"+str(j)+";"+str(2**i)+'\n');
                                j+=1
                                if i>0:
                                        i=i-1;

                        prj_set = set(prj_dict.keys()) - set(priorities)
                        prj_set = list(prj_set)
                        prj_list = random.sample( prj_set,k=len(prj_set)  )
                        for p in prj_list:
                                file.write(id+";"+str(int(p))+";"+str(j)+";"+str(2**i)+'\n');
                                j+=1
                        #        file.write('\n');

        file.close();


def reprint_students(dirname):
        print("read students.csv")
        students_file=dirname+"/students.csv";
        f = open(students_file, "r")
        lines=f.readlines();
        f.close();

        students_file=dirname+"/tmp_students.txt";
        file=open(students_file,'w');
        for line in lines:
                if line[0]!= "#":
                        line=line.strip('\n\r');
                        parts=line.split(";");
                        if len(parts)>8: # name separeted from surname
                                name = parts[5]+parts[6]
                        id=identifier(parts[1])
                        mytype = typetransform(parts[2].lower())
                        file.write(parts[0]+";"+id+";"+mytype+'\n');

        file.close();
        return len(lines)



def quote_projects(dirname, n_stds):
        print("read projects.csv")
        projects_file=dirname+"/projects.csv"
        f = open(projects_file, "r")
        lines=f.readlines();
        f.close();

        project_dict={}
        file=open(dirname+"/tmp_projects.txt",'w');
        for line in lines:
                if line[0]=="#": continue
                line=line.strip("\r\n");
                parts=line.split(";");
                mytype = typetransform(parts[5].lower())
                ##print parts; ";\""+parts[2].strip('"')+"\"
                file.write(parts[0]+";"+parts[1]+";"+parts[3]+";"+parts[4]+";"+mytype+"\n");
                project_dict[parts[0]]=int(parts[4])

        capacity = sum([project_dict[k] for k in project_dict])
        if (capacity < n_stds):
                file.write(str(len(project_dict)+1)+";;1;"+str(n_stds-capacity)+";"+mytype+"\n");
                project_dict[len(project_dict)+1]=n_stds-capacity
        file.close();

        return project_dict




def main(argv):
        dirname = "."
#
#        parser = argparse.ArgumentParser(description='Create a file priorities.txt containing weighted priorities.')
#        parser.add_argument('--dir', dest='dirname', action='store',
#                                                help='the directory where the data are to be found')
#
#        args = parser.parse_args()
#        print args.dirname()
#
        try:
                opts, args = getopt.getopt(argv, "hd:", ["help", "dir="])
        except getopt.GetoptError:
                usage()
                sys.exit(2)

        if (len(opts)==0):
                usage();

        for opt, arg in opts:
                if opt in ("-h", "--help"):
                        usage()
                        sys.exit()
                elif opt in ("-d", "--dir"):
                        dirname = arg


        n_stds = reprint_students(dirname);
        prj_dict = quote_projects(dirname, n_stds);
        make_priority(dirname, prj_dict);



def usage():
        print("Reads data from dirname and writes in \"./priorities.csv\" and \"./projects-quoted.csv\"");
        print("Usage: [\"help\", \"dir=\"]\n");
        sys.exit(1);


if __name__ == "__main__":
        main(sys.argv[1:])
